package Vista;

import Controlador.Controlador;
import Controlador.ControladorProductos;
import Controlador.ControladorUsuarios;

import Modelo.Productos;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VistaInventario extends javax.swing.JFrame {
    // Instancias
    Controlador controlador = new Controlador();
    ControladorUsuarios controladorUsuarios = new ControladorUsuarios();
    ControladorProductos controladorProductos = new ControladorProductos();

    // Listas
    List<Productos> listaProductos = controladorProductos.obtenerProductos();
    
    public VistaInventario() {
        initComponents();

        // Cargar las categorias en el comboBox
        controladorProductos.cargarCategorias(jComboCatergoria);

        // Obtener los productos de la base de datos y mostrarlos en la tabla
        
        mostrarProductosEnTabla(listaProductos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jComboCatergoria = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));
        setResizable(false);

        jLabel2.setText("Inventario");

        jLabel1.setText("Producto");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnCerrarSesion.setText("Cerrar Sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Producto", "Precio", "Categoria", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Precio");

        jLabel4.setText("Categoria");

        jComboCatergoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Seleccionar Categoria --" }));

        jLabel5.setText("Cantidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCerrarSesion)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnEliminar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnModificar))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtPrecio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                                .addComponent(txtProducto, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addGap(22, 22, 22))
                                        .addComponent(jComboCatergoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jComboCatergoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnEliminar)
                            .addComponent(btnModificar))
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrarSesion)
                        .addGap(71, 71, 71))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // Validar los campos
        String mensaje = validarCampos();
        if (mensaje != null) {
            JOptionPane.showMessageDialog(null, mensaje);
            return;
        }
        
        try {
            String nombreProducto = txtProducto.getText();
            String precioProducto = txtPrecio.getText();
            String categoriaProducto = jComboCatergoria.getSelectedItem().toString();
            String cantidadProducto = txtCantidad.getText();
            
            String categoriaSeleccionada = "";
            switch (categoriaProducto) {
                case "Procesador":
                    categoriaSeleccionada = "1";
                    break;
                case "Placa Madre":
                    categoriaSeleccionada = "2";
                    break;
                case "Memoria RAM":
                    categoriaSeleccionada = "3";
                    break;
                case "Fuente de Poder":
                    categoriaSeleccionada = "4";
                    break;
                case "Gabinete":
                    categoriaSeleccionada = "5";
                    break;
            }

            // crear objeto tipo producto
            Productos producto = new Productos();
            producto.setNombreProducto(nombreProducto);
            producto.setPrecio(Integer.parseInt(precioProducto));
            producto.setCantidad(Integer.parseInt(cantidadProducto));
            producto.setCategoria(Integer.parseInt(categoriaSeleccionada));

            // Agregar el producto a la base de datos
            String productoControlador = controladorProductos.validarProducto(nombreProducto, precioProducto, cantidadProducto, categoriaSeleccionada);
            if (productoControlador != null) {
                JOptionPane.showMessageDialog(null, productoControlador);
                limpiarCampos();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al agregar el producto " + e.getMessage());
        }
        
        // Actualizar la tabla
        listaProductos = controladorProductos.obtenerProductos();
        mostrarProductosEnTabla(listaProductos);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        // Obtener la fila seleccionada
        int fila = jTable1.getSelectedRow();

        // Verificar si la fila es valida
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun producto en la tabla");
            return;
        }

        try {
            // Obtener el producto seleccionado
            String nombreProducto = modelo.getValueAt(fila, 0).toString();
            int precioProducto = Integer.parseInt(modelo.getValueAt(fila, 1).toString());
            int categoriaProducto = Integer.parseInt(modelo.getValueAt(fila, 2).toString());
            int cantidadProducto = Integer.parseInt(modelo.getValueAt(fila, 3).toString());

            // Crear el producto
            Productos producto = new Productos();
            producto.setNombreProducto(nombreProducto);
            producto.setPrecio(precioProducto);
            producto.setCategoria(categoriaProducto);
            producto.setCantidad(cantidadProducto);
            
            // Eliminar el producto
            controladorProductos.eliminarProducto(producto);

            // Eliminar el producto de la tabla
            modelo.removeRow(fila);
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el producto: " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // Validar los campos
        String mensaje = validarCampos();
        if (mensaje != null) {
            JOptionPane.showMessageDialog(null, mensaje);
            return;
        }
        
        // Obtener la fila seleccionada
        int fila = jTable1.getSelectedRow();

        // Verificar si la fila es valida   
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun producto en la tabla");
            return;
        }       

        try {
            // Obtenr los datos de los campos
            String nombreProducto = txtProducto.getText();
            String precioProducto = txtPrecio.getText();
            String categoriaProducto = jComboCatergoria.getSelectedItem().toString();
            String cantidadProducto = txtCantidad.getText();

            // Switch case para obtener id de categoria segun el nombre de la categoria
            int categoriaInt = 0;
            switch (categoriaProducto) {
                case "Procesador":
                    categoriaInt = 1;
                    break;
                case "Placa Madre":
                    categoriaInt = 2;
                    break;
                case "Memoria RAM":
                    categoriaInt = 3;
                    break;
                case "Fuente de Poder":
                    categoriaInt = 4;
                    break;
                case "Gabinete":
                    categoriaInt = 5;
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Categoria no valida");
                    return;
            }
            
            // Crear el producto
            Productos producto = new Productos();
            producto.setNombreProducto(nombreProducto);
            producto.setPrecio(Integer.parseInt(precioProducto));
            producto.setCategoria(categoriaInt);
            producto.setCantidad(Integer.parseInt(cantidadProducto));

            // Modificar el producto
            controladorProductos.modificarProducto(producto);

            // Actualizar la tabla
            listaProductos = controladorProductos.obtenerProductos();
            mostrarProductosEnTabla(listaProductos);
            limpiarCampos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al modificar el producto: " + e.getMessage());
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        controladorUsuarios.cerrarSesion();
        this.dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    // Mostrar los datos en el JTable
    public void mostrarProductosEnTabla(List<Productos> listaProductos) {
        String matriz[][] = new String[listaProductos.size()][4];

        for (int i = 0; i < listaProductos.size(); i++) {
            matriz[i][0] = listaProductos.get(i).getNombreProducto();
            matriz[i][1] = String.valueOf(listaProductos.get(i).getPrecio());
            matriz[i][2] = String.valueOf(listaProductos.get(i).getCategoria());
            matriz[i][3] = String.valueOf(listaProductos.get(i).getCantidad());
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(matriz, new String[] { "Producto", "Precio", "Categoria", "Cantidad" }));
    }

    // Funcion para validad los campos
    public String validarCampos() {

        if (!Controlador.verificarCampoVacio(txtProducto.getText())) {
            return "El campo Nombre del producto esta vacio.";
        }

        if (!Controlador.verificarCampoVacio(txtPrecio.getText())) {
            return "El campo Cantidad del producto esta vacio.";
        }

        if (!Controlador.verificarCampoVacio(txtCantidad.getText())) {
            return "El campo Cantidad del producto esta vacio.";
        }

        if (!Controlador.validarNumero(txtPrecio.getText())) {
            return "El campo Precio debe ser un numero mayor a 0.";
        }

        if (!Controlador.validarNumero(txtCantidad.getText())) {
            return "El campo Cantidad debe ser un numero mayor a 0.";
        }

        return null;
    }

    public void limpiarCampos() {
        txtProducto.setText("");
        txtPrecio.setText("");
        jComboCatergoria.setSelectedIndex(0);
        txtCantidad.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> jComboCatergoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtProducto;
    // End of variables declaration//GEN-END:variables
}
